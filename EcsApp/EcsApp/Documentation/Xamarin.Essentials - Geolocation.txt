Xamarin:Essentials: Geolocation
In this article:
- Get Started
- Using Geolocation
- GeolocationAccuracy
- Detecting Mock Locations
- Distance between Two Locations
- Platform Difference
- API
- Related Video

The Geolocation class provides API to retrieve the device's current geolocation coordinates.

Get Started
To start using this API, read the getting started guide for Xamarin.Essentials to ensure the library is properly installed and set up in your projects.
To access the Geolocation functionality, the following platform specific setup is required.

- Android
Coarse and Fine Location permissions are required and must be configured in the Android project. Additionally, if your app targets Android 5.0 (API Level 21) or higher, you must declare that your app uses the hardware feature in the manifest file. This can be added in the following ways
Open the AssemblyInfo.cs file under the properties folder and add the following code:
Or update the Android manifest:
Open the AndroidManifest.xml file under the Properties folder and the following inside of the manifest code:
Or right-click on the Android project and open the project's properties. Under Android Manifest find the Required permissions: area and check the ACCESS_COARSE_LOCATION and ACCESS_FINE_LOCATION permissions. This will automatically update the AndroidManifest.xml file
This API uses runtime permissions on Android. Please ensure that Xamarin.Essentials is fully initialized and permission handling is setup in your app.
In the Android project's MainLauncher or any Activity that is lauched Xamarin.Essentials must be initialized in the OnCreate method:
To handle runtime permissions on Android, Xamarin.Essentials must receive any OnRequestPermissionResult. Add the following code to all Activity classes:

- iOS
Your app's Info.plist must contain the NSLocationWhenInUseUsageDescription key in order to access the device's location.
Open the plist editor and add the Privacay - Location When In Use Usage Description property and fill in a value to display to the user.
Or manually edit the file and add the following and update the rationale.

Using Geolocation
Add a reference to Xamarin.Essentials in your class:
The Geolocation API will also prompt the user for perssions when necessary.
You can get the last known location of the device by calling the GetLastKnownLocationAsync method. This is often faster then doing a full query, but can be less accurate and may return null if no cached location exits.
The altitude isn't always available. If it is not available, the Altitude property might be null or the value might be zero. If the altitude is available, the value is in meters above sea level.
The query for the current device's location cordinates, the GetLocationAsync can be used. It is best to pass in a full GeoLocationRequest and CancellationToken since it may take some time to get the device's location.

Detecting Mock Locations
Some devices may return a mock location from the provider or by an application that provides mock location. You can detect this by using the IsFromMockProvider or any Location